import React from "react";
import FullCalendarr from '@fullcalendar/react'
import DayGridPlugin from '@fullcalendar/daygrid'
import GooglePlugin from '@fullcalendar/google-calendar'
//import interactionPlugin from "@fullcalendar/interaction";
import {Dialog,DialogActions,DialogContent,DialogTitle,Typography,Button} from '@mui/material'
import Link from 'next/link'
import {monthNames} from '@portalnesia/utils'
import '@fullcalendar/common/main.min.css'
import '@fullcalendar/daygrid/main.min.css'

const FullCalendar=React.memo(FullCalendarr)

const eventHandler=(arg)=>{
    if(arg.jsEvent.preventDefault()) arg.jsEvent.preventDefault();
    const urll = arg.event.url ,
    desc = (urll.match(/^https\:\/\/portalnesia/)) ? arg.event.extendedProps.description : arg.event.start.getDate()+' '+monthNames[arg.event.start.getMonth()]+' '+arg.event.start.getFullYear(),
    subtitle=(urll.match(/^https\:\/\/portalnesia/)) ? arg.event.extendedProps.subtitle : "Hari Libur di Indonesia",
    title=arg.event.title,
    link=(urll.match(/^https\:\/\/portalnesia/)) ? arg.event.url.substring(23) : null;
    const event={
        title:title,
        subtitle:subtitle,
        description:desc,
        link:link
    }
    return Promise.resolve(event)
}

function Calendar({googleapi,url}){
    const [dialog, setDialog] = React.useState(null);
    const handleClose = React.useCallback(() => {
        setDialog(null);
    },[]);
    const handlerEvent=React.useCallback((arg)=>{
        eventHandler(arg).then((event)=>setDialog(event));
    },[])
    return(
        <div>
            <FullCalendar 
                plugins={[DayGridPlugin,GooglePlugin]}
                googleCalendarApiKey={googleapi}
                eventSources={[
                    {
                        googleCalendarId: 'id.indonesian#holiday@group.v.calendar.google.com',
                        color: '#007bff',
                        textColor:'white'
                    }, {
                        color: '#2f6f4e',
                        textColor:'white',
                        url: url
                    }
                ]}
                displayEventEnd={true}
                eventClick={handlerEvent}
            />
            <Dialog open={dialog!==null} keepMounted aria-labelledby='dialog'>
                <DialogTitle id='dialog-title'>Events</DialogTitle>
                {dialog!==null && (
                    <DialogContent>
                        <div style={{marginBottom:10}}>
                            <Typography variant='h5' component='h5'>{dialog?.title}</Typography>
                            <Typography variant='body2' component='h6'>{dialog?.subtitle}</Typography>
                        </div>
                        <Typography component='p'>{dialog?.description}</Typography>
                    </DialogContent>
                )}
                {dialog!==null && (
                    <DialogActions>
                        {dialog?.link!==null && <Link href={dialog.link} passHref><a><Button>Detail</Button></a></Link>}
                        <Button onClick={handleClose}>Close</Button>
                    </DialogActions>
                )}
            </Dialog>
        </div>
    )
}
export default React.memo(Calendar)
// href={dialog.link.substring(1,5) === 'user' ? `/user/[...slug]` : '/events/[slug]'}